@model ProgrammingQuestions.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "ProblemForm";
}

<h2>Submit your problem</h2>

@using (Html.BeginForm("Save", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(q => q.Id)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control kratki", placeholder = "Enter short description about your problem." } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SkillLevelId, new SelectList(Model.SkillLevels, "Id", "Name"), "Select Skill Level", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillLevelId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.Countries, "Id", "Name"), "Choose Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Enter your programming task in detail." } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @foreach (var item in Model.Technologies)
            {
                <div style="float:left; margin-left: 10px;">
                    <label>@Html.DisplayFor(model => item.Name)</label>
                    <input type="checkbox" value="@item.Id" name="techIds" />
                </div>
            }
        </div>

        <div class="form-group">
                <input type="submit" class="btn btn-success" />
        </div>
    </div>
}

<div>
    <p>
        @Html.Partial("_BackToListPartial")
    </p>
</div>


@section scripts
{
    @* zbog ovoga se validacija radi prvo na klijentu - nema validacijske poruke na vrhu zbog toga*@
    @Scripts.Render("~/bundles/jqueryval")
}
